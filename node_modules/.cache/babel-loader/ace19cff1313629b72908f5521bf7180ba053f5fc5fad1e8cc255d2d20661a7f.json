{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{AuthContext}from'../context/authContext';// Update the path to your AuthContext\nimport{Link}from'react-router-dom';import'../styles/UserVibes.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserVibes=()=>{const[userVibes,setUserVibes]=useState([]);const[availableVibes,setAvailableVibes]=useState([]);const[selectedVibesToAdd,setSelectedVibesToAdd]=useState([]);const{user}=useContext(AuthContext);// Access user from the AuthContext\nconst fetchUserVibes=async()=>{if(!user){return;// Return early if user is null\n}try{console.log('Fetching user vibes');const response=await fetch(\"/api/user/vibes\",{// Ensure the endpoint matches your backend route\nheaders:{'Authorization':\"Bearer \".concat(user.token)}});if(!response.ok){throw new Error('Failed to fetch user vibes');}const data=await response.json();setUserVibes(data.vibes);// Assuming the response contains a 'vibes' array\nconst vibeIds=data.vibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error fetching user vibes:',error);setUserVibes([]);// Set userVibes to empty array on error\n}};const fetchAvailableVibes=async()=>{try{console.log('Fetching available vibes');const response=await fetch('/api/vibes');if(!response.ok){throw new Error('Failed to fetch available vibes');}const data=await response.json();setAvailableVibes(data);// Assuming the response contains an array of vibes\n}catch(error){console.error('Error fetching available vibes:',error);setAvailableVibes([]);// Set availableVibes to empty array on error\n}};// Fetch all available vibes when the component mounts\nuseEffect(()=>{fetchAvailableVibes();},[]);const handleVibeSelection=vibeId=>{// Check if the vibe is already in localStorage userVibes\nconst storedVibes=JSON.parse(localStorage.getItem('userVibes'))||[];if(storedVibes.includes(vibeId)){return;// Return early if the vibe is already in userVibes\n}// If not in userVibes, check if the vibe is already selected\nif(selectedVibesToAdd.includes(vibeId)){return;// Return early if the vibe is already selected\n}// Add the vibe to selectedVibesToAdd\nsetSelectedVibesToAdd([...selectedVibesToAdd,vibeId]);};const handleDeleteVibe=async vibeId=>{const token=user.token;// Access the token from the user object\ntry{const response=await fetch(\"/api/user/deleteVibe/\".concat(vibeId),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed response from server.');}console.log('Vibe deleted successfully!');fetchUserVibes();// Refresh user vibes\nconst updatedVibes=userVibes.filter(vibe=>vibe._id!==vibeId);const vibeIds=updatedVibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error deleting vibe:',error);}};const handleSubmit=async e=>{e.preventDefault();const token=user.token;console.log('Selected Vibes:',selectedVibesToAdd);try{// Assuming selectedVibesToAdd contains vibe IDs\nconst response=await fetch('/api/user/addVibes',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({vibes:selectedVibesToAdd})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed response from server.');}const updatedUser=await response.json();console.log('Updated User:',updatedUser);setUserVibes(updatedUser.vibes);// Update userVibes with the server response\nconsole.log('Vibes added successfully!');setSelectedVibesToAdd([]);fetchUserVibes();// Refresh user vibes\nconst vibeIds=updatedUser.vibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error adding vibes:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-vibes-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Current Vibes\"}),/*#__PURE__*/_jsx(\"ul\",{children:userVibes.map(vibe=>/*#__PURE__*/_jsxs(\"li\",{children:[vibe.name,/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteVibe(vibe._id),children:\"Delete\"})]},vibe._id))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Choose Vibes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"available-vibes-container\",children:availableVibes.map(vibe=>/*#__PURE__*/_jsx(\"button\",{className:\"vibe-button \".concat(selectedVibesToAdd.includes(vibe._id)?'selected':''),onClick:()=>handleVibeSelection(vibe._id),children:vibe.name},vibe._id))})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/\",children:\"Click here to check out your matching experiences!\"})})]});};export default UserVibes;","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Link","jsx","_jsx","jsxs","_jsxs","UserVibes","userVibes","setUserVibes","availableVibes","setAvailableVibes","selectedVibesToAdd","setSelectedVibesToAdd","user","fetchUserVibes","console","log","response","fetch","headers","concat","token","ok","Error","data","json","vibes","vibeIds","map","vibe","_id","localStorage","setItem","JSON","stringify","error","fetchAvailableVibes","handleVibeSelection","vibeId","storedVibes","parse","getItem","includes","handleDeleteVibe","method","errorData","updatedVibes","filter","handleSubmit","e","preventDefault","body","updatedUser","className","children","name","onClick","onSubmit","to"],"sources":["/home/bradley/projects/TravelVibesPR/src/pages/UserVibes.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../context/authContext'; // Update the path to your AuthContext\nimport { Link } from 'react-router-dom';\nimport '../styles/UserVibes.css';\n\nconst UserVibes = () => {\n    const [userVibes, setUserVibes] = useState([]);\n    const [availableVibes, setAvailableVibes] = useState([]);\n    const [selectedVibesToAdd, setSelectedVibesToAdd] = useState([]);\n    const { user } = useContext(AuthContext); // Access user from the AuthContext\n\n    const fetchUserVibes = async () => {\n        if (!user) {\n            return; // Return early if user is null\n        }\n\n        try {\n            console.log('Fetching user vibes');\n            const response = await fetch(`/api/user/vibes`, { // Ensure the endpoint matches your backend route\n                headers: {\n                    'Authorization': `Bearer ${user.token}`\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch user vibes');\n            }\n\n            const data = await response.json();\n            setUserVibes(data.vibes); // Assuming the response contains a 'vibes' array\n\n            const vibeIds = data.vibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error fetching user vibes:', error);\n            setUserVibes([]); // Set userVibes to empty array on error\n        }\n    };\n\n    const fetchAvailableVibes = async () => {\n        try {\n            console.log('Fetching available vibes');\n            const response = await fetch('/api/vibes');\n            if (!response.ok) {\n                throw new Error('Failed to fetch available vibes');\n            }\n            const data = await response.json();\n            setAvailableVibes(data); // Assuming the response contains an array of vibes\n        } catch (error) {\n            console.error('Error fetching available vibes:', error);\n            setAvailableVibes([]); // Set availableVibes to empty array on error\n        }\n    };\n\n    // Fetch all available vibes when the component mounts\n    useEffect(() => {\n        fetchAvailableVibes();\n    }, []);\n\n    const handleVibeSelection = (vibeId) => {\n        // Check if the vibe is already in localStorage userVibes\n        const storedVibes = JSON.parse(localStorage.getItem('userVibes')) || [];\n        if (storedVibes.includes(vibeId)) {\n            return; // Return early if the vibe is already in userVibes\n        }\n\n        // If not in userVibes, check if the vibe is already selected\n        if (selectedVibesToAdd.includes(vibeId)) {\n            return; // Return early if the vibe is already selected\n        }\n\n        // Add the vibe to selectedVibesToAdd\n        setSelectedVibesToAdd([...selectedVibesToAdd, vibeId]);\n    };\n\n\n    const handleDeleteVibe = async (vibeId) => {\n        const token = user.token; // Access the token from the user object\n\n        try {\n            const response = await fetch(`/api/user/deleteVibe/${vibeId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed response from server.');\n            }\n\n            console.log('Vibe deleted successfully!');\n            fetchUserVibes(); // Refresh user vibes\n\n            const updatedVibes = userVibes.filter(vibe => vibe._id !== vibeId);\n            const vibeIds = updatedVibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error deleting vibe:', error);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const token = user.token;\n\n        console.log('Selected Vibes:', selectedVibesToAdd);\n\n        try {\n            // Assuming selectedVibesToAdd contains vibe IDs\n            const response = await fetch('/api/user/addVibes', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ vibes: selectedVibesToAdd })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed response from server.');\n            }\n\n            const updatedUser = await response.json();\n            console.log('Updated User:', updatedUser);\n\n            setUserVibes(updatedUser.vibes); // Update userVibes with the server response\n\n            console.log('Vibes added successfully!');\n            setSelectedVibesToAdd([]);\n\n            fetchUserVibes(); // Refresh user vibes\n\n            const vibeIds = updatedUser.vibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error adding vibes:', error);\n        }\n    };\n\n    return (\n        <div className=\"user-vibes-container\">\n            <h3>Current Vibes</h3>\n            <ul>\n                {userVibes.map(vibe => (\n                    <li key={vibe._id}>\n                        {vibe.name}\n                        <button onClick={() => handleDeleteVibe(vibe._id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <form onSubmit={handleSubmit}>\n                <h3>Choose Vibes</h3>\n                <div className=\"available-vibes-container\">\n                    {availableVibes.map(vibe => (\n                        <button\n                            key={vibe._id}\n                            className={`vibe-button ${selectedVibesToAdd.includes(vibe._id) ? 'selected' : ''}`}\n                            onClick={() => handleVibeSelection(vibe._id)}\n                        >\n                            {vibe.name}\n                        </button>\n                    ))}\n                </div>\n            </form>\n\n            <div>\n                <Link to=\"/\">Click here to check out your matching experiences!</Link>\n            </div>\n        </div>\n    );\n};\n\n\nexport default UserVibes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}