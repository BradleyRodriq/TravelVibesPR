{"ast":null,"code":"import{useState}from'react';import{useAuthContext}from'./useAuthContext';export const useLogin=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);const{dispatch}=useAuthContext();const login=async(email,password)=>{setIsLoading(true);setError(null);const response=await fetch('/api/user/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const json=await response.json();if(!response.ok){setIsLoading(false);setError(json.error);return false;}if(response.ok){// save the user to local storage\nlocalStorage.setItem('user',JSON.stringify(json));localStorage.setItem('userVibes',JSON.stringify(json.vibes));// update the auth context\ndispatch({type:'LOGIN',payload:json});// update loading state\nsetIsLoading(false);return true;}};return{login,isLoading,error};};","map":{"version":3,"names":["useState","useAuthContext","useLogin","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","vibes","type","payload"],"sources":["/home/bradley/projects/TravelVibesPR/src/hooks/useLogin.js"],"sourcesContent":["import { useState} from 'react'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useLogin = () => {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const { dispatch } = useAuthContext()\n\n    const login = async (email, password) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/user/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email, password})\n        })\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.error)\n            return false\n        }\n        if (response.ok) {\n            // save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n            localStorage.setItem('userVibes', JSON.stringify(json.vibes));\n\n            // update the auth context\n            dispatch({type: 'LOGIN', payload: json})\n\n            // update loading state\n            setIsLoading(false)\n            return true\n        }\n    }\n    return { login, isLoading, error }\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAO,OAAO,CAC/B,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAEO,QAAS,CAAC,CAAGN,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAO,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACrCJ,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,iBAAiB,CAAE,CAC5CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAC,cAAc,CAAE,kBAAkB,CAAC,CAC7CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAACR,KAAK,CAAEC,QAAQ,CAAC,CAC1C,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAI,CAACP,QAAQ,CAACQ,EAAE,CAAE,CACdb,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC,CACpB,MAAO,MAAK,CAChB,CACA,GAAIQ,QAAQ,CAACQ,EAAE,CAAE,CACb;AACAC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAClDE,YAAY,CAACC,OAAO,CAAC,WAAW,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAACI,KAAK,CAAC,CAAC,CAE7D;AACAf,QAAQ,CAAC,CAACgB,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAEN,IAAI,CAAC,CAAC,CAExC;AACAZ,YAAY,CAAC,KAAK,CAAC,CACnB,MAAO,KAAI,CACf,CACJ,CAAC,CACD,MAAO,CAAEE,KAAK,CAAEH,SAAS,CAAEF,KAAM,CAAC,CACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}