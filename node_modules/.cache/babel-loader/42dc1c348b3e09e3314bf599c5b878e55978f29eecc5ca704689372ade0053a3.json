{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import App from'./App';import{ExperienceContextProvider}from'./context/experienceContext';import{AuthContextProvider}from'./context/authContext';import{VibesProvider}from'./context/vibeContext';import{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(AuthContextProvider,{children:/*#__PURE__*/_jsx(ExperienceContextProvider,{children:/*#__PURE__*/_jsx(VibesProvider,{children:/*#__PURE__*/_jsx(App,{})})})})}));","map":{"version":3,"names":["React","ReactDOM","App","ExperienceContextProvider","AuthContextProvider","VibesProvider","jsx","_jsx","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["/home/bradley/projects/TravelVibesPR/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { ExperienceContextProvider } from './context/experienceContext';\nimport { AuthContextProvider } from './context/authContext';\nimport { VibesProvider } from './context/vibeContext';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n    <ExperienceContextProvider>\n    <VibesProvider>\n      <App />\n    </VibesProvider>\n    </ExperienceContextProvider>\n    </AuthContextProvider>\n  </React.StrictMode>\n);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,yBAAyB,KAAQ,6BAA6B,CACvE,OAASC,mBAAmB,KAAQ,uBAAuB,CAC3D,OAASC,aAAa,KAAQ,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAGtD,KAAM,CAAAC,IAAI,CAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CACjEH,IAAI,CAACI,MAAM,cACTL,IAAA,CAACP,KAAK,CAACa,UAAU,EAAAC,QAAA,cACfP,IAAA,CAACH,mBAAmB,EAAAU,QAAA,cACpBP,IAAA,CAACJ,yBAAyB,EAAAW,QAAA,cAC1BP,IAAA,CAACF,aAAa,EAAAS,QAAA,cACZP,IAAA,CAACL,GAAG,GAAE,CAAC,CACM,CAAC,CACW,CAAC,CACP,CAAC,CACN,CACpB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}