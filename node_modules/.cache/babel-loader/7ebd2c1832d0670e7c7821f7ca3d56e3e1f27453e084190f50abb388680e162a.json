{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = await response.json();\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n      return false;\n    }\n    if (response.ok) {\n      // save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json));\n      localStorage.setItem('userVibes', JSON.stringify(json.vibes));\n\n      // update the auth context\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n\n      // update loading state\n      setIsLoading(false);\n      return true;\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"leglVsSbW4DJnC7nVdCyJFB0GD8=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","vibes","type","payload"],"sources":["/home/bradley/projects/TravelVibesPR/src/hooks/useLogin.js"],"sourcesContent":["import { useState} from 'react'\nimport { useAuthContext } from './useAuthContext'\n\nexport const useLogin = () => {\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const { dispatch } = useAuthContext()\n\n    const login = async (email, password) => {\n        setIsLoading(true)\n        setError(null)\n\n        const response = await fetch('/api/user/login', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({email, password})\n        })\n        const json = await response.json()\n\n        if (!response.ok) {\n            setIsLoading(false)\n            setError(json.error)\n            return false\n        }\n        if (response.ok) {\n            // save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n            localStorage.setItem('userVibes', JSON.stringify(json.vibes));\n\n            // update the auth context\n            dispatch({type: 'LOGIN', payload: json})\n\n            // update loading state\n            setIsLoading(false)\n            return true\n        }\n    }\n    return { login, isLoading, error }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAO,OAAO;AAC/B,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEQ;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAC,cAAc,EAAE;MAAkB,CAAC;MAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,KAAK;QAAEC;MAAQ,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAElC,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MACdb,YAAY,CAAC,KAAK,CAAC;MACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,CAAC;MACpB,OAAO,KAAK;IAChB;IACA,IAAIQ,QAAQ,CAACQ,EAAE,EAAE;MACb;MACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC;MAClDE,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAACI,KAAK,CAAC,CAAC;;MAE7D;MACAf,QAAQ,CAAC;QAACgB,IAAI,EAAE,OAAO;QAAEC,OAAO,EAAEN;MAAI,CAAC,CAAC;;MAExC;MACAZ,YAAY,CAAC,KAAK,CAAC;MACnB,OAAO,IAAI;IACf;EACJ,CAAC;EACD,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAAAD,EAAA,CAnCYD,QAAQ;EAAA,QAGID,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}