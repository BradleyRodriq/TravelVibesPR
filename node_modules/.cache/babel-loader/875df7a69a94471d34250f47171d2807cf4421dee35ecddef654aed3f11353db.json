{"ast":null,"code":"import React,{useState,useEffect,useContext,useCallback}from'react';import{AuthContext}from'../context/authContext';// Update the path to your AuthContext\nimport{Link}from'react-router-dom';import'../styles/UserVibes.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UserVibes=()=>{const[userVibes,setUserVibes]=useState([]);const[availableVibes,setAvailableVibes]=useState({});const[selectedVibesToAdd,setSelectedVibesToAdd]=useState([]);const[loading,setLoading]=useState(true);const{user}=useContext(AuthContext);// Access user from the AuthContext\nconst fetchUserVibes=useCallback(async()=>{if(!user)return;// Return early if user is null\ntry{console.log('Fetching user vibes');const response=await fetch(\"/api/user/vibes\",{headers:{'Authorization':\"Bearer \".concat(user.token)}});if(!response.ok){throw new Error('Failed to fetch user vibes');}const data=await response.json();setUserVibes(data.vibes);// Assuming the response contains a 'vibes' array\nconst vibeIds=data.vibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error fetching user vibes:',error);setUserVibes([]);// Set userVibes to empty array on error\n}},[user]);const fetchAvailableVibes=useCallback(async()=>{try{console.log('Fetching available vibes');const response=await fetch('/api/vibes');if(!response.ok){throw new Error('Failed to fetch available vibes');}const data=await response.json();// Convert the array of vibes into a dictionary for quick lookup\nconst vibesDict=data.reduce((acc,vibe)=>{acc[vibe._id]=vibe.name;return acc;},{});setAvailableVibes(vibesDict);}catch(error){console.error('Error fetching available vibes:',error);setAvailableVibes({});// Set availableVibes to empty dictionary on error\n}},[]);useEffect(()=>{const fetchData=async()=>{setLoading(true);if(user){await Promise.all([fetchUserVibes(),fetchAvailableVibes()]);}setLoading(false);};fetchData();},[user,fetchUserVibes,fetchAvailableVibes]);const handleVibeSelection=vibeId=>{const storedVibes=JSON.parse(localStorage.getItem('userVibes'))||[];if(storedVibes.includes(vibeId)||selectedVibesToAdd.includes(vibeId)){return;}setSelectedVibesToAdd([...selectedVibesToAdd,vibeId]);};const handleDeleteVibe=async vibeId=>{const token=user.token;try{const response=await fetch(\"/api/user/deleteVibe/\".concat(vibeId),{method:'DELETE',headers:{'Authorization':\"Bearer \".concat(token)}});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed response from server.');}console.log('Vibe deleted successfully!');fetchUserVibes();// Refresh user vibes\nconst updatedVibes=userVibes.filter(vibe=>vibe._id!==vibeId);const vibeIds=updatedVibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error deleting vibe:',error);}};const handleSubmit=async e=>{e.preventDefault();const token=user.token;console.log('Selected Vibes:',selectedVibesToAdd);try{const response=await fetch('/api/user/addVibes',{method:'PUT',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(token)},body:JSON.stringify({vibes:selectedVibesToAdd})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed response from server.');}const updatedUser=await response.json();console.log('Updated User:',updatedUser);setUserVibes(updatedUser.vibes);// Update userVibes with the server response\nconsole.log('Vibes added successfully!');setSelectedVibesToAdd([]);fetchUserVibes();// Refresh user vibes\nconst vibeIds=updatedUser.vibes.map(vibe=>vibe._id);localStorage.setItem('userVibes',JSON.stringify(vibeIds));}catch(error){console.error('Error adding vibes:',error);}};if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsxs(\"div\",{className:\"user-vibes-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Current Vibes\"}),/*#__PURE__*/_jsx(\"ul\",{children:userVibes.map(vibe=>/*#__PURE__*/_jsxs(\"li\",{children:[availableVibes[vibe._id]||'Unknown Vibe',/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteVibe(vibe._id),children:\"Delete\"})]},vibe._id))}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Choose Vibes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"available-vibes-container\",children:Object.entries(availableVibes).map(_ref=>{let[vibeId,vibeName]=_ref;return/*#__PURE__*/_jsx(\"button\",{className:\"vibe-button \".concat(selectedVibesToAdd.includes(vibeId)?'selected':''),onClick:()=>handleVibeSelection(vibeId),children:vibeName},vibeId);})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Link,{to:\"/Home\",children:\"Click here to check out your matching experiences!\"})})]});};export default UserVibes;","map":{"version":3,"names":["React","useState","useEffect","useContext","useCallback","AuthContext","Link","jsx","_jsx","jsxs","_jsxs","UserVibes","userVibes","setUserVibes","availableVibes","setAvailableVibes","selectedVibesToAdd","setSelectedVibesToAdd","loading","setLoading","user","fetchUserVibes","console","log","response","fetch","headers","concat","token","ok","Error","data","json","vibes","vibeIds","map","vibe","_id","localStorage","setItem","JSON","stringify","error","fetchAvailableVibes","vibesDict","reduce","acc","name","fetchData","Promise","all","handleVibeSelection","vibeId","storedVibes","parse","getItem","includes","handleDeleteVibe","method","errorData","updatedVibes","filter","handleSubmit","e","preventDefault","body","updatedUser","children","className","onClick","onSubmit","Object","entries","_ref","vibeName","to"],"sources":["/home/bradley/projects/TravelVibesPR/src/pages/UserVibes.js"],"sourcesContent":["import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { AuthContext } from '../context/authContext'; // Update the path to your AuthContext\nimport { Link } from 'react-router-dom';\nimport '../styles/UserVibes.css';\n\nconst UserVibes = () => {\n    const [userVibes, setUserVibes] = useState([]);\n    const [availableVibes, setAvailableVibes] = useState({});\n    const [selectedVibesToAdd, setSelectedVibesToAdd] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const { user } = useContext(AuthContext); // Access user from the AuthContext\n\n    const fetchUserVibes = useCallback(async () => {\n        if (!user) return; // Return early if user is null\n\n        try {\n            console.log('Fetching user vibes');\n            const response = await fetch(`/api/user/vibes`, {\n                headers: {\n                    'Authorization': `Bearer ${user.token}`\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error('Failed to fetch user vibes');\n            }\n\n            const data = await response.json();\n            setUserVibes(data.vibes); // Assuming the response contains a 'vibes' array\n\n            const vibeIds = data.vibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error fetching user vibes:', error);\n            setUserVibes([]); // Set userVibes to empty array on error\n        }\n    }, [user]);\n\n    const fetchAvailableVibes = useCallback(async () => {\n        try {\n            console.log('Fetching available vibes');\n            const response = await fetch('/api/vibes');\n            if (!response.ok) {\n                throw new Error('Failed to fetch available vibes');\n            }\n            const data = await response.json();\n            // Convert the array of vibes into a dictionary for quick lookup\n            const vibesDict = data.reduce((acc, vibe) => {\n                acc[vibe._id] = vibe.name;\n                return acc;\n            }, {});\n            setAvailableVibes(vibesDict);\n        } catch (error) {\n            console.error('Error fetching available vibes:', error);\n            setAvailableVibes({}); // Set availableVibes to empty dictionary on error\n        }\n    }, []);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            if (user) {\n                await Promise.all([fetchUserVibes(), fetchAvailableVibes()]);\n            }\n            setLoading(false);\n        };\n        fetchData();\n    }, [user, fetchUserVibes, fetchAvailableVibes]);\n\n    const handleVibeSelection = (vibeId) => {\n        const storedVibes = JSON.parse(localStorage.getItem('userVibes')) || [];\n        if (storedVibes.includes(vibeId) || selectedVibesToAdd.includes(vibeId)) {\n            return;\n        }\n        setSelectedVibesToAdd([...selectedVibesToAdd, vibeId]);\n    };\n\n    const handleDeleteVibe = async (vibeId) => {\n        const token = user.token;\n\n        try {\n            const response = await fetch(`/api/user/deleteVibe/${vibeId}`, {\n                method: 'DELETE',\n                headers: {\n                    'Authorization': `Bearer ${token}`\n                }\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed response from server.');\n            }\n\n            console.log('Vibe deleted successfully!');\n            fetchUserVibes(); // Refresh user vibes\n\n            const updatedVibes = userVibes.filter(vibe => vibe._id !== vibeId);\n            const vibeIds = updatedVibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error deleting vibe:', error);\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const token = user.token;\n\n        console.log('Selected Vibes:', selectedVibesToAdd);\n\n        try {\n            const response = await fetch('/api/user/addVibes', {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer ${token}`\n                },\n                body: JSON.stringify({ vibes: selectedVibesToAdd })\n            });\n\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || 'Failed response from server.');\n            }\n\n            const updatedUser = await response.json();\n            console.log('Updated User:', updatedUser);\n\n            setUserVibes(updatedUser.vibes); // Update userVibes with the server response\n\n            console.log('Vibes added successfully!');\n            setSelectedVibesToAdd([]);\n\n            fetchUserVibes(); // Refresh user vibes\n\n            const vibeIds = updatedUser.vibes.map(vibe => vibe._id);\n            localStorage.setItem('userVibes', JSON.stringify(vibeIds));\n        } catch (error) {\n            console.error('Error adding vibes:', error);\n        }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"user-vibes-container\">\n            <h3>Current Vibes</h3>\n            <ul>\n                {userVibes.map(vibe => (\n                    <li key={vibe._id}>\n                        {availableVibes[vibe._id] || 'Unknown Vibe'}\n                        <button onClick={() => handleDeleteVibe(vibe._id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <form onSubmit={handleSubmit}>\n                <h3>Choose Vibes</h3>\n                <div className=\"available-vibes-container\">\n                    {Object.entries(availableVibes).map(([vibeId, vibeName]) => (\n                        <button\n                            key={vibeId}\n                            className={`vibe-button ${selectedVibesToAdd.includes(vibeId) ? 'selected' : ''}`}\n                            onClick={() => handleVibeSelection(vibeId)}\n                        >\n                            {vibeName}\n                        </button>\n                    ))}\n                </div>\n            </form>\n\n            <div>\n                <Link to=\"/Home\">Click here to check out your matching experiences!</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default UserVibes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}