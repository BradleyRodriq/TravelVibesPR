{"ast":null,"code":"import{useState}from'react';import{useAuthContext}from'./useAuthContext';export const useSignup=()=>{const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);const{dispatch}=useAuthContext();const signup=async(email,password)=>{setIsLoading(true);setError(null);try{const response=await fetch('/api/user/signup',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const json=await response.json();if(!response.ok){setIsLoading(false);setError(json.error||'Signup failed');return false;// Return false or handle failure as needed\n}// Save the user to local storage\nlocalStorage.setItem('user',JSON.stringify(json));// Update the auth context\ndispatch({type:'LOGIN',payload:json});setIsLoading(false);return true;// Return true for successful signup\n}catch(error){console.error('Signup Error:',error);setIsLoading(false);setError(error.message||'Signup failed');return false;// Return false or handle failure in catch block\n}};return{signup,isLoading,error};};","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload","console","message"],"sources":["/home/bradley/projects/TravelVibesPR/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from 'react';\nimport { useAuthContext } from './useAuthContext';\n\nexport const useSignup = () => {\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { dispatch } = useAuthContext();\n\n    const signup = async (email, password) => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const response = await fetch('/api/user/signup', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ email, password })\n            });\n\n            const json = await response.json();\n\n            if (!response.ok) {\n                setIsLoading(false);\n                setError(json.error || 'Signup failed');\n                return false; // Return false or handle failure as needed\n            }\n\n            // Save the user to local storage\n            localStorage.setItem('user', JSON.stringify(json));\n\n            // Update the auth context\n            dispatch({ type: 'LOGIN', payload: json });\n\n            setIsLoading(false);\n            return true; // Return true for successful signup\n        } catch (error) {\n            console.error('Signup Error:', error);\n            setIsLoading(false);\n            setError(error.message || 'Signup failed');\n            return false; // Return false or handle failure in catch block\n        }\n    };\n\n    return { signup, isLoading, error };\n};\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,OAASC,cAAc,KAAQ,kBAAkB,CAEjD,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGJ,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACK,SAAS,CAAEC,YAAY,CAAC,CAAGN,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAEO,QAAS,CAAC,CAAGN,cAAc,CAAC,CAAC,CAErC,KAAM,CAAAO,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACtCJ,YAAY,CAAC,IAAI,CAAC,CAClBF,QAAQ,CAAC,IAAI,CAAC,CAEd,GAAI,CACA,KAAM,CAAAO,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kBAAkB,CAAE,CAC7CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC5C,CAAC,CAAC,CAEF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAElC,GAAI,CAACP,QAAQ,CAACQ,EAAE,CAAE,CACdb,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACc,IAAI,CAACf,KAAK,EAAI,eAAe,CAAC,CACvC,MAAO,MAAK,CAAE;AAClB,CAEA;AACAiB,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,CAAC,CAElD;AACAX,QAAQ,CAAC,CAAEe,IAAI,CAAE,OAAO,CAAEC,OAAO,CAAEL,IAAK,CAAC,CAAC,CAE1CZ,YAAY,CAAC,KAAK,CAAC,CACnB,MAAO,KAAI,CAAE;AACjB,CAAE,MAAOH,KAAK,CAAE,CACZqB,OAAO,CAACrB,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCG,YAAY,CAAC,KAAK,CAAC,CACnBF,QAAQ,CAACD,KAAK,CAACsB,OAAO,EAAI,eAAe,CAAC,CAC1C,MAAO,MAAK,CAAE;AAClB,CACJ,CAAC,CAED,MAAO,CAAEjB,MAAM,CAAEH,SAAS,CAAEF,KAAM,CAAC,CACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}