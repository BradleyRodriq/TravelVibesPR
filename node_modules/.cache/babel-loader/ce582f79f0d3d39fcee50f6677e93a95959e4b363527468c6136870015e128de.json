{"ast":null,"code":"var _jsxFileName = \"/home/bradley/projects/TravelVibesPR/src/pages/ExperienceMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"600px\"\n};\nconst center = {\n  lat: 18.2362,\n  // Puerto Rico latitude\n  lng: -66.4534 // Puerto Rico longitude\n};\nconst ExperienceMap = () => {\n  _s();\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const navigate = useNavigate();\n  const fetchExperiences = async () => {\n    try {\n      const userVibes = JSON.parse(localStorage.getItem('userVibes')) || [];\n      const response = await fetch(\"/api/experiences\"); // Adjust the endpoint as needed\n      const data = await response.json();\n      let experiences;\n      if (userVibes.length === 0) {\n        experiences = data.map(exp => ({\n          position: {\n            lat: exp.geolocation.coordinates[1],\n            lng: exp.geolocation.coordinates[0]\n          },\n          photo: exp.pictureUrl,\n          name: exp.name,\n          description: exp.description,\n          // Assuming there is a description field\n          id: exp._id\n        }));\n      } else {\n        // Filter experiences based on userVibes\n        experiences = data.filter(exp => {\n          // Assuming each experience has a `vibes` array\n          return exp.vibes.some(vibe => userVibes.includes(vibe));\n        }).map(exp => ({\n          position: {\n            lat: exp.geolocation.coordinates[1],\n            lng: exp.geolocation.coordinates[0]\n          },\n          photo: exp.pictureUrl,\n          name: exp.name,\n          description: exp.description,\n          // Assuming there is a description field\n          id: exp._id\n        }));\n      }\n      setMarkers(experiences);\n    } catch (error) {\n      console.error(\"Error fetching experiences:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchExperiences();\n  }, []);\n  const handleMarkerClick = marker => {\n    setSelectedMarker(marker);\n  };\n  const handleMouseOver = index => {\n    setActiveMarker(index);\n  };\n  const handleMouseOut = () => {\n    setActiveMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      center: center,\n      zoom: 10,\n      className: \"map\",\n      children: [markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.position,\n        title: marker.name,\n        onClick: () => handleMarkerClick(marker),\n        onMouseOver: () => handleMouseOver(index),\n        onMouseOut: handleMouseOut,\n        icon: {\n          scaledSize: new window.google.maps.Size(activeMarker === index ? 50 : 40, activeMarker === index ? 50 : 40)\n        },\n        className: `marker ${activeMarker === index ? 'active' : ''}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)), selectedMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: selectedMarker.position,\n        onCloseClick: () => setSelectedMarker(null),\n        className: \"info-window\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-window-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"info-window-title\",\n            children: selectedMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"info-window-description\",\n            children: selectedMarker.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedMarker.photo,\n            alt: selectedMarker.name,\n            className: \"info-window-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => navigate(`/experience/${selectedMarker.id}`),\n            className: \"info-window-button\",\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ExperienceMap, \"ycEkqvQIixE4oELTOZ7Dtzmzl44=\", false, function () {\n  return [useNavigate];\n});\n_c = ExperienceMap;\nexport default ExperienceMap;\nvar _c;\n$RefreshReg$(_c, \"ExperienceMap\");","map":{"version":3,"names":["React","useState","useEffect","GoogleMap","Marker","InfoWindow","useNavigate","jsxDEV","_jsxDEV","mapContainerStyle","width","height","center","lat","lng","ExperienceMap","_s","markers","setMarkers","selectedMarker","setSelectedMarker","activeMarker","setActiveMarker","navigate","fetchExperiences","userVibes","JSON","parse","localStorage","getItem","response","fetch","data","json","experiences","length","map","exp","position","geolocation","coordinates","photo","pictureUrl","name","description","id","_id","filter","vibes","some","vibe","includes","error","console","handleMarkerClick","marker","handleMouseOver","index","handleMouseOut","className","children","zoom","title","onClick","onMouseOver","onMouseOut","icon","scaledSize","window","google","maps","Size","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","src","alt","_c","$RefreshReg$"],"sources":["/home/bradley/projects/TravelVibesPR/src/pages/ExperienceMap.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, Marker, InfoWindow } from \"@react-google-maps/api\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst mapContainerStyle = {\n  width: \"100%\",\n  height: \"600px\",\n};\n\nconst center = {\n  lat: 18.2362, // Puerto Rico latitude\n  lng: -66.4534, // Puerto Rico longitude\n};\n\nconst ExperienceMap = () => {\n  const [markers, setMarkers] = useState([]);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [activeMarker, setActiveMarker] = useState(null);\n  const navigate = useNavigate();\n\n  const fetchExperiences = async () => {\n    try {\n      const userVibes = JSON.parse(localStorage.getItem('userVibes')) || [];\n\n      const response = await fetch(\"/api/experiences\"); // Adjust the endpoint as needed\n      const data = await response.json();\n\n      let experiences;\n      if (userVibes.length === 0) {\n        experiences = data.map((exp) => ({\n          position: { lat: exp.geolocation.coordinates[1], lng: exp.geolocation.coordinates[0] },\n          photo: exp.pictureUrl,\n          name: exp.name,\n          description: exp.description, // Assuming there is a description field\n          id: exp._id,\n        }));\n      } else {\n        // Filter experiences based on userVibes\n        experiences = data.filter(exp => {\n          // Assuming each experience has a `vibes` array\n          return exp.vibes.some(vibe => userVibes.includes(vibe));\n        }).map((exp) => ({\n          position: { lat: exp.geolocation.coordinates[1], lng: exp.geolocation.coordinates[0] },\n          photo: exp.pictureUrl,\n          name: exp.name,\n          description: exp.description, // Assuming there is a description field\n          id: exp._id,\n        }));\n      }\n\n      setMarkers(experiences);\n    } catch (error) {\n      console.error(\"Error fetching experiences:\", error);\n    }\n  };\n\nuseEffect(() => {\n  fetchExperiences();\n}, []);\n\n\n  const handleMarkerClick = (marker) => {\n    setSelectedMarker(marker);\n  };\n\n  const handleMouseOver = (index) => {\n    setActiveMarker(index);\n  };\n\n  const handleMouseOut = () => {\n    setActiveMarker(null);\n  };\n\n  return (\n    <div className=\"map-container\">\n      <GoogleMap\n        mapContainerStyle={mapContainerStyle}\n        center={center}\n        zoom={10}\n        className=\"map\"\n      >\n        {markers.map((marker, index) => (\n          <Marker\n            key={index}\n            position={marker.position}\n            title={marker.name}\n            onClick={() => handleMarkerClick(marker)}\n            onMouseOver={() => handleMouseOver(index)}\n            onMouseOut={handleMouseOut}\n            icon={{\n              scaledSize: new window.google.maps.Size(\n                activeMarker === index ? 50 : 40,\n                activeMarker === index ? 50 : 40\n              ),\n            }}\n            className={`marker ${activeMarker === index ? 'active' : ''}`}\n          />\n        ))}\n        {selectedMarker && (\n          <InfoWindow\n            position={selectedMarker.position}\n            onCloseClick={() => setSelectedMarker(null)}\n            className=\"info-window\"\n          >\n            <div className=\"info-window-content\">\n              <h2 className=\"info-window-title\">{selectedMarker.name}</h2>\n              <p className=\"info-window-description\">{selectedMarker.description}</p>\n              <img\n                src={selectedMarker.photo}\n                alt={selectedMarker.name}\n                className=\"info-window-image\"\n              />\n              <button\n                onClick={() => navigate(`/experience/${selectedMarker.id}`)}\n                className=\"info-window-button\"\n              >\n                View Details\n              </button>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </div>\n  );\n};\n\nexport default ExperienceMap;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,QAAQ,wBAAwB;AACtE,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,OAAO;EAAE;EACdC,GAAG,EAAE,CAAC,OAAO,CAAE;AACjB,CAAC;AAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,cAAc,EAAEC,iBAAiB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMsB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;MAErE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;MAClD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIC,WAAW;MACf,IAAIT,SAAS,CAACU,MAAM,KAAK,CAAC,EAAE;QAC1BD,WAAW,GAAGF,IAAI,CAACI,GAAG,CAAEC,GAAG,KAAM;UAC/BC,QAAQ,EAAE;YAAEzB,GAAG,EAAEwB,GAAG,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC,CAAC;YAAE1B,GAAG,EAAEuB,GAAG,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC;UAAE,CAAC;UACtFC,KAAK,EAAEJ,GAAG,CAACK,UAAU;UACrBC,IAAI,EAAEN,GAAG,CAACM,IAAI;UACdC,WAAW,EAAEP,GAAG,CAACO,WAAW;UAAE;UAC9BC,EAAE,EAAER,GAAG,CAACS;QACV,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL;QACAZ,WAAW,GAAGF,IAAI,CAACe,MAAM,CAACV,GAAG,IAAI;UAC/B;UACA,OAAOA,GAAG,CAACW,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIzB,SAAS,CAAC0B,QAAQ,CAACD,IAAI,CAAC,CAAC;QACzD,CAAC,CAAC,CAACd,GAAG,CAAEC,GAAG,KAAM;UACfC,QAAQ,EAAE;YAAEzB,GAAG,EAAEwB,GAAG,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC,CAAC;YAAE1B,GAAG,EAAEuB,GAAG,CAACE,WAAW,CAACC,WAAW,CAAC,CAAC;UAAE,CAAC;UACtFC,KAAK,EAAEJ,GAAG,CAACK,UAAU;UACrBC,IAAI,EAAEN,GAAG,CAACM,IAAI;UACdC,WAAW,EAAEP,GAAG,CAACO,WAAW;UAAE;UAC9BC,EAAE,EAAER,GAAG,CAACS;QACV,CAAC,CAAC,CAAC;MACL;MAEA5B,UAAU,CAACgB,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAEHlD,SAAS,CAAC,MAAM;IACdsB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGJ,MAAM8B,iBAAiB,GAAIC,MAAM,IAAK;IACpCnC,iBAAiB,CAACmC,MAAM,CAAC;EAC3B,CAAC;EAED,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjCnC,eAAe,CAACmC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BpC,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA;IAAKmD,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BpD,OAAA,CAACL,SAAS;MACRM,iBAAiB,EAAEA,iBAAkB;MACrCG,MAAM,EAAEA,MAAO;MACfiD,IAAI,EAAE,EAAG;MACTF,SAAS,EAAC,KAAK;MAAAC,QAAA,GAEd3C,OAAO,CAACmB,GAAG,CAAC,CAACmB,MAAM,EAAEE,KAAK,kBACzBjD,OAAA,CAACJ,MAAM;QAELkC,QAAQ,EAAEiB,MAAM,CAACjB,QAAS;QAC1BwB,KAAK,EAAEP,MAAM,CAACZ,IAAK;QACnBoB,OAAO,EAAEA,CAAA,KAAMT,iBAAiB,CAACC,MAAM,CAAE;QACzCS,WAAW,EAAEA,CAAA,KAAMR,eAAe,CAACC,KAAK,CAAE;QAC1CQ,UAAU,EAAEP,cAAe;QAC3BQ,IAAI,EAAE;UACJC,UAAU,EAAE,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,IAAI,CACrClD,YAAY,KAAKoC,KAAK,GAAG,EAAE,GAAG,EAAE,EAChCpC,YAAY,KAAKoC,KAAK,GAAG,EAAE,GAAG,EAChC;QACF,CAAE;QACFE,SAAS,EAAE,UAAUtC,YAAY,KAAKoC,KAAK,GAAG,QAAQ,GAAG,EAAE;MAAG,GAZzDA,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAaX,CACF,CAAC,EACDxD,cAAc,iBACbX,OAAA,CAACH,UAAU;QACTiC,QAAQ,EAAEnB,cAAc,CAACmB,QAAS;QAClCsC,YAAY,EAAEA,CAAA,KAAMxD,iBAAiB,CAAC,IAAI,CAAE;QAC5CuC,SAAS,EAAC,aAAa;QAAAC,QAAA,eAEvBpD,OAAA;UAAKmD,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCpD,OAAA;YAAImD,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAEzC,cAAc,CAACwB;UAAI;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5DnE,OAAA;YAAGmD,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAEzC,cAAc,CAACyB;UAAW;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvEnE,OAAA;YACEqE,GAAG,EAAE1D,cAAc,CAACsB,KAAM;YAC1BqC,GAAG,EAAE3D,cAAc,CAACwB,IAAK;YACzBgB,SAAS,EAAC;UAAmB;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,eACFnE,OAAA;YACEuD,OAAO,EAAEA,CAAA,KAAMxC,QAAQ,CAAC,eAAeJ,cAAc,CAAC0B,EAAE,EAAE,CAAE;YAC5Dc,SAAS,EAAC,oBAAoB;YAAAC,QAAA,EAC/B;UAED;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CACb;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAAC3D,EAAA,CA9GID,aAAa;EAAA,QAIAT,WAAW;AAAA;AAAAyE,EAAA,GAJxBhE,aAAa;AAgHnB,eAAeA,aAAa;AAAC,IAAAgE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}